name: Build and check

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-jvm-matrix:
    runs-on: ubuntu-latest
    steps: # https://michaelheap.com/dynamic-matrix-generation-github-actions/
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - id: set-matrix
        run: echo "version_matrix=$(curl https://endoflife.date/api/oracle-jdk.json | jq -c '[.[] | select(.extendedSupport > (now | strftime("%Y-%m-%d"))) | .cycle]' | sed 's/ //g')" >> $GITHUB_OUTPUT
      - name: verify-matrix
        run: echo "The selected java versions are ${{ steps.set-matrix.outputs.version_matrix }}"
    outputs:
      version_matrix: ${{ steps.set-matrix.outputs.version_matrix }}
  build:
    needs: build-jvm-matrix
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        java_version: ${{ fromJson(needs.build-jvm-matrix.outputs.version_matrix) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: configure windows pagefile
        if: ${{ matrix.os  == 'windows-latest' }}
        uses: al-cheb/configure-pagefile-action@a3b6ebd6b634da88790d9c58d4b37a7f4a7b8708 # v1.4
        with:
          minimum-size: 8GB
          maximum-size: 8GB
          disk-root: "D:"
      - name: set up JDK
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'zulu'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
      - name: Restore TestKit cache
        # Inspired by https://github.com/actions/cache/issues/432#issuecomment-740376179
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            plugin/.gradle-test-kit/caches/modules-2
            plugin/.gradle-test-kit/caches/files-2.1
            plugin/.gradle-test-kit/caches/metadata-2.96
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}-
            ${{ runner.os }}-gradle-wrapper-
      - name: Test Plugin
        run: ./plugin/gradlew -p ./plugin check --no-daemon
      - name: Upload test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: test-results-${{ runner.os }}-java-${{ matrix.java_version }}
          path: plugin/build/reports/tests/test/
      - name: Upload Memory Dump
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: memory-dump-${{ runner.os }}
          path: |
            hs_err_pid*
            replay_pid*
            plugin/hs_err_pid*
            plugin/replay_pid*
      - name: Check plugin codestyle
        run: ./plugin/gradlew -p ./plugin ktlintCheck --no-daemon

  check_bashisms:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: set up JDK 11
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
      - name: update apt
        run: sudo apt update
      - name: Install lintian
        run: sudo apt install -qq lintian
      - name: Install libdistro
        run: sudo apt install -qq libdistro-info-perl
      - name: Install checkbashisms
        run: sudo apt-get install -qq devscripts
      - name: Check git bashisms
        run: ./gradlew compileKotlin addKtlintCheckGitPreCommitHook --no-daemon && checkbashisms .git/hooks/pre-commit

  check_samples:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: set up JDK 11
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
      - name: Check ktlint-plugin on samples
        run: ./gradlew ktlintCheck --no-daemon
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
        with:
          dependency-graph: generate-and-upload

  check_release:
    name: Test Release Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Base Release Environment Setup
        uses: ./.github/actions/base-release
      - name: Verify Release Pipeline
        env:
          GITHUB_KEY: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./plugin/gradlew \
          -p ./plugin \
          -DdryRun=true \
          -x test \
          devSnapshot \
          validatePlugins \
          githubRelease
