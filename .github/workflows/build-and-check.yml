name: Build and check

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        fail-fast: false
        os: [ubuntu-latest, windows-latest]
    # Windows is failing with "out of memory" errors.
    continue-on-error: ${{ matrix.os == 'windows-latest' }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'zulu'
      - name: Restore Gradle caches
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-2
            ~/.gradle/caches/files-2.1
            ~/.gradle/caches/metadata-2.96
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-
      # Inspired by https://github.com/actions/cache/issues/432#issuecomment-740376179
      - name: Restore TestKit cache
        uses: actions/cache@v2
        with:
          path: |
            plugin/.gradle-test-kit/caches/modules-2
            plugin/.gradle-test-kit/caches/files-2.1
            plugin/.gradle-test-kit/caches/metadata-2.96
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}-
            ${{ runner.os }}-gradle-wrapper-
      - name: Restore Gradle wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Build plugin
        run: ./plugin/gradlew -p ./plugin assemble ensureDependenciesAreInlined test --no-daemon
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results-${{ runner.os }}
          path: plugin/build/reports/tests/test/
      - name: Upload Memory Dump
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: memory-dump-${{ runner.os }}
          path: |
            hs_err_pid*
            replay_pid*
            plugin/hs_err_pid*
            plugin/replay_pid*
      - name: Check plugin codestyle
        run: ./plugin/gradlew -p ./plugin ktlintCheck --no-daemon

  check_bashisms:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'zulu'
      - name: Install checkbashisms
        run: sudo apt-get install -qq devscripts
      - name: Restore Gradle caches
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-
      - name: Restore Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Check git bashisms
        run: ./gradlew addKtlintCheckGitPreCommitHook --no-daemon && checkbashisms .git/hooks/pre-commit

  check_samples:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'zulu'
      - name: Restore Gradle caches
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-
      - name: Restore Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Check ktlint-plugin on samples
        run: ./gradlew ktlintCheck --no-daemon
